# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

# default_platform(:ios)
fastlane_version "2.93.1"

BUILD_PATH="./build"
DERIVED_DATA_PATH = "#{BUILD_PATH}/derived_data"
PROJECT_NAME='BonMot.xcodeproj'

desc "Tests: iOS, tvOS, macOS. Builds: watchOS."
lane :test_all do
  test(scheme: "BonMot-iOS", devices: get_devices())
  test(scheme: "BonMot-OSX", destination: "platform=macOS")
  test(scheme: "BonMot-tvOS")
  # Unit testing is not available on watchOS
  xcodebuild(scheme: "BonMot-watchOS",
             derivedDataPath: DERIVED_DATA_PATH)
end

platform :mac do
  desc "Runs Tests for macOS"
  lane :test_macos do
    test(scheme: "BonMot-OSX", destination: "platform=macOS")
  end
end

platform :ios do
  desc "Runs Tests for latest iOS"
  lane :test_ios do
    devices = get_devices()
    test(scheme: "BonMot-iOS",
         devices: devices)
  end

  desc "Runs Tests for tvOS"
  lane :test_tvos do
    test(scheme: "BonMot-tvOS")
  end

  # Tests cannot be run on watchOS
  desc "Build for watchOS"
  lane :build_watchos do
    xcodebuild(scheme: "BonMot-watchOS",
               derivedDataPath: DERIVED_DATA_PATH)
  end
end

def test(scheme:, devices: nil, destination: nil)
  # NOTE: Running too many devices concurrently breaks CircleCI resource limits
  disable_concurrent_testing = false
  if ENV['CIRCLE_BUILD_NUM']
    disable_concurrent_testing = true
  end

  xcargs = ""
  if !ENV['SWIFT_VERSION'].nil?
    xcargs = "SWIFT_VERSION=#{ENV['SWIFT_VERSION']}"
  end

  begin
    scan(
      devices: devices,
      destination: destination,
      scheme: scheme,
      xcargs: xcargs,
      derived_data_path: DERIVED_DATA_PATH,
      disable_concurrent_testing: disable_concurrent_testing
    )
  rescue => ex
    # Don't fail the entire lane when running tests, but print failure to STDERR
    STDERR.puts ex
  end
end

def get_devices()
  # The full list of iOS simulators available on CircleCI
  # https://circleci.com/docs/2.0/testing-ios/#supported-xcode-versions
  devices = []
	devices.push("iPhone SE (3rd generation)")
	devices.push("iPhone 14")
  devices.push("iPhone 14 Pro Max")
	devices.push("iPad Pro (11-inch) (4th generation)")
  devices
end
